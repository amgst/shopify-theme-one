{%- liquid
  assign header_tag = 'div'
  if section.settings.sticky_header_type == 'always' or section.settings.sticky_header_type == 'reduce-logo-size'
    assign header_tag = 'sticky-header'
  elsif section.settings.sticky_header_type == 'on-scroll-up'
    assign header_tag = 'sticky-header'
  endif
-%}

<{{ header_tag }}
  class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50"
  data-sticky-type="{{ section.settings.sticky_header_type }}"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500 p-2"
        >
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>

      <!-- Logo -->
      <div class="flex-shrink-0 flex items-center">
        {%- if request.page_type == 'index' -%}
          <h1 class="sr-only">{{ shop.name }}</h1>
        {%- endif -%}
        <a href="{{ routes.root_url }}" class="flex items-center">
          {%- if settings.logo != blank -%}
            <img
              src="{{ settings.logo | image_url: width: 150 }}"
              alt="{{ shop.name }}"
              class="h-8 w-auto"
              width="{{ settings.logo.width }}"
              height="{{ settings.logo.height }}"
            >
          {%- else -%}
            <span class="text-xl font-bold text-gray-900">{{ shop.name }}</span>
          {%- endif -%}
        </a>
      </div>

      <!-- Desktop Navigation -->
      {%- if section.settings.menu != blank -%}
        <nav class="hidden md:flex space-x-1">
          {%- for link in linklists[section.settings.menu].links -%}
            {%- if link.links != blank -%}
              <!-- Dropdown Menu -->
              <div class="relative group">
                <button class="text-gray-700 hover:text-gray-900 px-3 py-2 text-sm font-medium transition-colors duration-200 flex items-center space-x-1 group-hover:text-gray-900">
                  <span>{{ link.title }}</span>
                  <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                <div class="absolute left-0 mt-1 w-48 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                  <div class="py-1">
                    {%- for childlink in link.links -%}
                      <a href="{{ childlink.url }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 transition-colors duration-200">
                        {{ childlink.title }}
                      </a>
                    {%- endfor -%}
                  </div>
                </div>
              </div>
            {%- else -%}
              <!-- Regular Menu Item -->
              <a
                href="{{ link.url }}"
                class="text-gray-700 hover:text-gray-900 px-3 py-2 text-sm font-medium transition-colors duration-200 {% if link.current %}text-gray-900 font-semibold{% endif %}"
              >
                {{ link.title }}
              </a>
            {%- endif -%}
          {%- endfor -%}
        </nav>
      {%- endif -%}

      <!-- Right side icons -->
      <div class="flex items-center space-x-4">
        <!-- Search -->
        <button
          type="button"
          class="text-gray-700 hover:text-gray-900 p-2"
          onclick="document.getElementById('search-modal').style.display='block'"
        >
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </button>

        <!-- Account -->
        {%- if shop.customer_accounts_enabled -%}
          <a
            href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
            class="text-gray-700 hover:text-gray-900 p-2"
          >
            {%- if section.settings.enable_customer_avatar and customer and customer.has_avatar? -%}
              {{ customer | avatar: class: 'h-6 w-6 rounded-full' }}
            {%- else -%}
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
            {%- endif -%}
          </a>
        {%- endif -%}

        <!-- Cart -->
        <a href="{{ routes.cart_url }}" class="text-gray-700 hover:text-gray-900 p-2 relative">
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"></path>
          </svg>
          {%- if cart != empty -%}
            <span class="absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
              {{ cart.item_count }}
            </span>
          {%- endif -%}
        </a>
      </div>
    </div>
  </div>

  <!-- Mobile menu (hidden by default) -->
  <div class="md:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
      {%- if section.settings.menu != blank -%}
        {%- for link in linklists[section.settings.menu].links -%}
          {%- if link.links != blank -%}
            <!-- Mobile Dropdown Menu -->
            <div class="mobile-dropdown">
              <button class="w-full text-left text-gray-700 hover:text-gray-900 block px-3 py-2 text-base font-medium flex items-center justify-between" onclick="toggleMobileDropdown(this)">
                <span>{{ link.title }}</span>
                <svg class="w-4 h-4 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div class="mobile-submenu hidden pl-4 space-y-1">
                {%- for childlink in link.links -%}
                  <a href="{{ childlink.url }}" class="text-gray-600 hover:text-gray-900 block px-3 py-2 text-sm">
                    {{ childlink.title }}
                  </a>
                {%- endfor -%}
              </div>
            </div>
          {%- else -%}
            <!-- Regular Mobile Menu Item -->
            <a href="{{ link.url }}" class="text-gray-700 hover:text-gray-900 block px-3 py-2 text-base font-medium {% if link.current %}text-gray-900 font-semibold{% endif %}">
              {{ link.title }}
            </a>
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
    </div>
  </div>
</{{ header_tag }}>

<!-- Search Modal -->
<div id="search-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
  <div class="flex items-start justify-center min-h-screen pt-16 px-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
      <div class="p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-medium text-gray-900">Search</h3>
          <button
            type="button"
            onclick="document.getElementById('search-modal').style.display='none'"
            class="text-gray-400 hover:text-gray-600"
          >
            <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <form action="{{ routes.search_url }}" method="get" class="space-y-4">
          <input
            type="search"
            name="q"
            placeholder="Search products..."
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            autocomplete="off"
          >
          <button
            type="submit"
            class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors duration-200"
          >
            Search
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}
{%- endif -%}

<script>
  // Simple mobile menu toggle
  document.addEventListener('DOMContentLoaded', function () {
    const mobileMenuButton = document.querySelector('.md\\:hidden button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function () {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });

  // Mobile dropdown toggle function
  function toggleMobileDropdown(button) {
    const submenu = button.nextElementSibling;
    const icon = button.querySelector('svg');
    
    submenu.classList.toggle('hidden');
    icon.classList.toggle('rotate-180');
  }

  // Sticky header functionality
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = this;
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';

      if (this.headerIsAlwaysSticky) {
        this.classList.add('sticky', 'top-0');
      }

      this.currentScrollTop = 0;
      this.onScrollHandler = this.onScroll.bind(this);
      window.addEventListener('scroll', this.onScrollHandler, false);
    }

    disconnectedCallback() {
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.getAttribute('data-sticky-type') === 'on-scroll-up') {
        if (scrollTop > this.currentScrollTop && scrollTop > 100) {
          this.style.transform = 'translateY(-100%)';
        } else if (scrollTop < this.currentScrollTop) {
          this.style.transform = 'translateY(0)';
        }
      }

      this.currentScrollTop = scrollTop;
    }
  }

  customElements.define('sticky-header', StickyHeader);
</script>

<style>
  sticky-header {
    transition: transform 0.3s ease-in-out;
  }
</style>

{% schema %}
{
  "name": "Header",
  "class": "section-header",
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "left",
      "label": "Logo position"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "Menu"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "on-scroll-up",
          "label": "On scroll up"
        },
        {
          "value": "always",
          "label": "Always"
        }
      ],
      "default": "on-scroll-up",
      "label": "Sticky header"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "Show customer avatar"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    }
  ]
}
{% endschema %}
